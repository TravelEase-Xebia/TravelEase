name: frontend-microservice
on:
  pull_request:
    branches:
      - frontend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '24'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

  code_quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '24'

      - name: Run ESLint
        run: npm run lint

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug AWS Key Presence (remove after testing)
        run: |
          if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then
            echo "❌ AWS_ACCESS_KEY_ID is NOT set!"
            exit 1
          else
            echo "✅ AWS_ACCESS_KEY_ID is present (not printing for security)"
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: travelease/frontend
          IMAGE_TAG: ${{ github.run_id }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  updatek8s:
    runs-on: ubuntu-latest
    needs: [build, docker]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Update tag in kubernetes deployment manifest
        run: |
          sed -i "s|image: .*|image: ${{ secrets.ECR_REGISTRY }}/travelease/frontend:${{ github.run_id }}|" kubernetes/deploy.yaml

      - name: Commit and push changes
        run: |
          git config --global user.email "madhujeet111@gmail.com"
          git config --global user.name "kavya-singh101"
          git add .
          git commit -m "[CI]: Update frontend image tag"
          git push origin HEAD:frontend -f
